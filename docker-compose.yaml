version: "3.8"

services:
  # JourneyAI Main Application
  app:
    build: .
    container_name: journeyai-app
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    depends_on:
      - redis
      - mongodb
      - qdrant
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ARQ Worker - Artifacts
  artifacts-worker:
    build: .
    container_name: journeyai-artifacts-worker
    command: ["arq", "app.workers.artifacts.worker.WorkerSettings"]
    env_file:
      - .env.prod
    depends_on:
      - redis
      - mongodb
      - qdrant
    restart: unless-stopped
    networks:
      - app-network

  # ARQ Worker - Agents
  agents-worker:
    build: .
    container_name: journeyai-agents-worker
    command: ["arq", "app.workers.agents.worker.WorkerSettings"]
    env_file:
      - .env.prod
    depends_on:
      - redis
      - mongodb
      - qdrant
    restart: unless-stopped
    networks:
      - app-network

  # ARQ Worker - Messages
  messages-worker:
    build: .
    container_name: journeyai-messages-worker
    command: ["arq", "app.workers.messages.worker.WorkerSettings"]
    env_file:
      - .env.prod
    depends_on:
      - redis
      - mongodb
      - qdrant
    restart: unless-stopped
    networks:
      - app-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: journeyai-qdrant
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC API
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    networks:
      - app-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: journeyai-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=journeyai
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    env_file:
      - .env.prod
    command: ["mongod", "--auth"]
    restart: unless-stopped
    networks:
      - app-network

  # Redis Cache/Message Broker
  redis:
    image: redis:7.2-alpine
    container_name: journeyai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network

volumes:
  qdrant_storage:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
